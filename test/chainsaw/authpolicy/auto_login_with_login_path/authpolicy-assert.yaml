# RequestAuthentication
apiVersion: security.istio.io/v1
kind: RequestAuthentication
metadata:
  name: auth-policy
spec:
  jwtRules:
    - audiences:
        - entraid_server
      forwardOriginalToken: true
      issuer: https://fake.auth/entraid
      jwksUri: http://mock-oauth2.auth:8080/entraid/jwks
  selector:
    matchLabels:
      app: application
---
# AuthorizationPolicy (require-auth)
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: auth-policy-require-auth
spec:
  rules:
    - to:
        - operation:
            paths:
              - '*'
      when:
        - key: request.auth.claims[iss]
          values:
            - https://fake.auth/entraid
        - key: request.auth.claims[aud]
          values:
            - entraid_server
  selector:
    matchLabels:
      app: application
---
# EnvoyFilter (auto-login)
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: auth-policy-login
spec:
  configPatches:
    - applyTo: CLUSTER
      match:
        cluster:
          service: oauth
      patch:
        operation: ADD
        value:
          connect_timeout: 10s
          dns_lookup_family: AUTO
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: oauth
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: fake.auth
                          port_value: 443
          name: oauth
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              sni: fake.auth
          type: LOGICAL_DNS
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.jwt_authn
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.oauth2
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
            config:
              auth_scopes:
                - openid
              authorization_endpoint: https://fake.auth/entraid/authorize
              credentials:
                client_id: entraid_server
                hmac_secret:
                  name: hmac
                  sds_config:
                    path_config_source:
                      path: /etc/istio/config/hmac-secret.yaml
                      watched_directory:
                        path: /etc/istio/config
                token_secret:
                  name: token
                  sds_config:
                    path_config_source:
                      path: /etc/istio/config/token-secret.yaml
                      watched_directory:
                        path: /etc/istio/config
              forward_bearer_token: true
              pass_through_matcher:
                - name: authorization
                  string_match:
                    prefix: 'Bearer '
                - invert_match: true
                  name: :path
                  string_match:
                    safe_regex:
                      google_re2: {}
                      regex: ^(/login|/oauth2/callback.*|/logout)$
              redirect_path_matcher:
                path:
                  exact: /oauth2/callback
              redirect_uri: https://%REQ(:authority)%/oauth2/callback
              retry_policy: {}
              signout_path:
                path:
                  exact: /logout
              token_endpoint:
                cluster: oauth
                timeout: 5s
                uri: https://fake.auth/entraid/token
              use_refresh_token: true
  workloadSelector:
    labels:
      app: application
---