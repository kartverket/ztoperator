# RequestAuthentication
apiVersion: security.istio.io/v1
kind: RequestAuthentication
metadata:
  name: auth-policy
spec:
  jwtRules:
    - audiences:
        - some-audience
      forwardOriginalToken: true
      issuer: https://login.microsoftonline.com/7f74c8a2-43ce-46b2-b0e8-b6306cba73a3/v2.0
      jwksUri: https://login.microsoftonline.com/7f74c8a2-43ce-46b2-b0e8-b6306cba73a3/discovery/v2.0/keys
  selector:
    matchLabels:
      app: application
---
# AuthorizationPolicy (ignore-auth)
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: auth-policy-ignore-auth
spec:
  rules:
    - to:
        - operation:
            paths:
              - /public*
  selector:
    matchLabels:
      app: application
---
# AuthorizationPolicy (require-auth)
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: auth-policy-require-auth
spec:
  rules:
    - to:
        - operation:
            notMethods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - HEAD
              - OPTIONS
              - TRACE
              - CONNECT
            paths:
              - /public*
        - operation:
            notPaths:
              - /public*
            paths:
              - '*'
      when:
        - key: request.auth.claims[iss]
          values:
            - https://login.microsoftonline.com/7f74c8a2-43ce-46b2-b0e8-b6306cba73a3/v2.0
        - key: request.auth.claims[aud]
          values:
            - some-audience
  selector:
    matchLabels:
      app: application
---
# EnvoyFilter (auto-login)
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: auth-policy-login
spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.lua
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
            default_source_code:
              inline_string: "\nlocal ignore_rules = {{regex=\"/public.*\",methods={}}}\nlocal require_rules = {{regex=\"/oauth2/callback\",methods={}},{regex=\"/logout\",methods={}}}\nlocal deny_redirect_rules = {}\n\n-- returns true when {p,m} matches any rule in the supplied table\nlocal function match(rules, p, m)\n  \tfor _, rule in ipairs(rules) do\n    \tif string.match(p, rule.regex) then\n      \t\t-- empty \"methods\" table == all methods\n      \t\tif next(rule.methods) == nil or rule.methods[m] then\n        \t\treturn true\n      \t\tend\n    \tend\n  \tend\n\treturn false\nend\n\n-- returns true if {p,m} is in ignore_rules *and* NOT in require_rules\nlocal function should_bypass(p, m)\n  \tlocal bypass = false\n  \tif p ~= \"\" and m ~= \"\" then\n    \t-- bypass only when it is in ignore_rules *and* NOT in require_rules\n    \tif match(ignore_rules, p, m) and not match(require_rules, p, m) then\n      \t\tbypass = true\n\t\tend\n  \tend\n  \treturn bypass\nend\n\n-- returns true if {p,m} is in deny_redirect_rules\nlocal function should_deny_redirect(p, m)\n  \tlocal deny_redirect = false\n  \tif p ~= \"\" and m ~= \"\" then\n    \t-- deny redirect only when it is in deny_redirect_rules\n    \tif match(deny_redirect_rules, p, m) then\n      \t\tdeny_redirect = true\n    \tend\n  \tend\n  \treturn deny_redirect\nend\n\nfunction envoy_on_request(request_handle)\n  \tlocal p = request_handle:headers():get(\":path\")   or \"\"\n  \tlocal m = request_handle:headers():get(\":method\") or \"\"\n\n  \tlocal bypass = should_bypass(p, m)\n  \trequest_handle:logCritical(\"Login bypassed?: \" .. tostring(bypass))\n  \trequest_handle:headers():add(\"x-bypass-login\", tostring(bypass))\n\n  \tlocal deny_redirect = should_deny_redirect(p, m)\n  \trequest_handle:logCritical(\"Deny redirect?: \" .. tostring(deny_redirect))\t\n  \trequest_handle:headers():add(\"x-deny-redirect\", tostring(deny_redirect))\nend\n"
    - applyTo: CLUSTER
      match:
        cluster:
          service: oauth
      patch:
        operation: ADD
        value:
          connect_timeout: 10s
          dns_lookup_family: V4_ONLY
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: oauth
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: login.microsoftonline.com
                          port_value: 443
          name: oauth
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              sni: login.microsoftonline.com
          type: LOGICAL_DNS
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.jwt_authn
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.oauth2
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
            config:
              auth_scopes:
                - openid
                - offline_access
                - User.Read
              authorization_endpoint: https://login.microsoftonline.com/7f74c8a2-43ce-46b2-b0e8-b6306cba73a3/oauth2/v2.0/authorize
              credentials:
                client_id: entraid_server
                hmac_secret:
                  name: hmac
                  sds_config:
                    path_config_source:
                      path: /etc/istio/config/hmac-secret.yaml
                      watched_directory:
                        path: /etc/istio/config
                token_secret:
                  name: token
                  sds_config:
                    path_config_source:
                      path: /etc/istio/config/token-secret.yaml
                      watched_directory:
                        path: /etc/istio/config
              deny_redirect_matcher:
                - name: x-deny-redirect
                  string_match:
                    exact: "true"
              end_session_endpoint: https://login.microsoftonline.com/7f74c8a2-43ce-46b2-b0e8-b6306cba73a3/oauth2/v2.0/logout
              forward_bearer_token: true
              pass_through_matcher:
                - name: authorization
                  string_match:
                    prefix: 'Bearer '
                - name: x-bypass-login
                  string_match:
                    exact: "true"
              redirect_path_matcher:
                path:
                  exact: /oauth2/callback
              redirect_uri: https://%REQ(:authority)%/oauth2/callback
              retry_policy: {}
              signout_path:
                path:
                  exact: /logout
              token_endpoint:
                cluster: oauth
                timeout: 5s
                uri: https://login.microsoftonline.com/7f74c8a2-43ce-46b2-b0e8-b6306cba73a3/oauth2/v2.0/token
              use_refresh_token: true
  workloadSelector:
    labels:
      app: application
---

