---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: authpolicies.ztoperator.kartverket.no
spec:
  group: ztoperator.kartverket.no
  names:
    kind: AuthPolicy
    listKind: AuthPolicyList
    plural: authpolicies
    singular: authpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AuthPolicy is the Schema for the authpolicies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AuthPolicySpec defines the desired state of AuthPolicy.
            properties:
              acceptedResources:
                description: |-
                  AcceptedResources is used as a validation field following [RFC8707](https://datatracker.ietf.org/doc/html/rfc8707).
                  It defines accepted audience resource indicators in the JWT token.


                  Each resource indicator must be a valid URI, and the indicator must be present as the `aud` claim in the JWT token.
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              audience:
                description: |-
                  Audience defines the accepted audience (`aud`) values in the JWT.
                  At least one of the listed audience values must be present in the token's `aud` claim for validation to succeed.
                items:
                  type: string
                type: array
              authRules:
                description: |-
                  AuthRules defines rules for allowing HTTP requests based on conditions
                  that must be met based on JWT claims.


                  API endpoints not covered by AuthRules and/or IgnoreAuthRules requires an authenticated JWT by default.
                items:
                  description: RequestAuthRule defines a rule for controlling access
                    to HTTP requests using JWT authentication.
                  properties:
                    methods:
                      description: |-
                        Methods specifies HTTP methods that applies for the defined paths.
                        If omitted, all methods are permitted.


                        Allowed methods:
                        - GET
                        - POST
                        - PUT
                        - PATCH
                        - DELETE
                        - HEAD
                        - OPTIONS
                        - TRACE
                        - CONNECT
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    paths:
                      description: |-
                        Paths specify a set of URI paths that this rule applies to.
                        Each path must be a valid URI path, starting with '/' and not ending with '/'.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    when:
                      description: |-
                        When defines additional conditions based on JWT claims that must be met.


                        The request is permitted if at least one of the specified conditions is satisfied.
                      items:
                        description: |-
                          Condition represents a rule that evaluates JWT claims to determine access control.


                          This type allows defining conditions that check whether a specific claim in
                          the JWT token contains one of the expected values.


                          If multiple conditions are specified, all must be met (AND logic) for the request to be allowed.
                        properties:
                          claim:
                            description: Claim specifies the name of the JWT claim
                              to check.
                            type: string
                          values:
                            description: |-
                              Values specifies a list of allowed values for the claim.
                              If the claim in the JWT contains any of these values (OR logic), the condition is met.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                        required:
                        - claim
                        - values
                        type: object
                      type: array
                  required:
                  - paths
                  - when
                  type: object
                type: array
              autoLogin:
                description: AutoLogin specifies the required configuration needed
                  to log in users.
                properties:
                  enabled:
                    description: |-
                      Whether to enable auto login.
                      If enabled, users accessing authenticated endpoints will be redirected to log in towards the configured identity provider.
                    type: boolean
                  loginPath:
                    description: |-
                      LoginPaths specifies a list of URI paths that should trigger the auto-login behavior.
                      When a request matches any of these paths, the user will be redirected to log in if not already authenticated.
                    pattern: ^/.*$
                    type: string
                  logoutPath:
                    description: |-
                      LogoutPath specifies which URI to redirect the user to when signing out.
                      This will end the session for the application, but not end the session towards the configured identity provider.
                      This feature will hopefully soon be available in later releases of Istio.
                    type: string
                  redirectPath:
                    description: RedirectPath specifies which path to redirect the
                      user to after completing the OIDC flow.
                    type: string
                  scopes:
                    description: Scopes specifies the OAuth2 scopes used during authorization
                      code flow.
                    items:
                      type: string
                    type: array
                required:
                - enabled
                - logoutPath
                - redirectPath
                - scopes
                type: object
              enabled:
                description: |-
                  Whether to enable JWT validation.
                  If enabled, incoming JWTs will be validated against the issuer specified in the app registration and the generated audience.
                type: boolean
              forwardJwt:
                default: true
                description: If set to `true`, the original token will be kept for
                  the upstream request. Defaults to `true`.
                type: boolean
              fromCookies:
                description: FromCookies denotes the cookies from which the auth policy
                  will look for a JWT.
                items:
                  type: string
                type: array
              ignoreAuthRules:
                description: |-
                  IgnoreAuthRules defines request matchers for HTTP requests that do not require JWT authentication.


                  API endpoints not covered by AuthRules or IgnoreAuthRules require an authenticated JWT by default.
                items:
                  description: RequestMatcher defines paths and methods to match incoming
                    HTTP requests.
                  properties:
                    methods:
                      description: |-
                        Methods specifies HTTP methods that applies for the defined paths.
                        If omitted, all methods are permitted.


                        Allowed methods:
                        - GET
                        - POST
                        - PUT
                        - PATCH
                        - DELETE
                        - HEAD
                        - OPTIONS
                        - TRACE
                        - CONNECT
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    paths:
                      description: |-
                        Paths specify a set of URI paths that this rule applies to.
                        Each path must be a valid URI path, starting with '/' and not ending with '/'.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                  required:
                  - paths
                  type: object
                type: array
              oAuthCredentials:
                description: OAuthCredentials specifies a reference to a kubernetes
                  secret in the same namespace holding OAuth credentials used for
                  authentication.
                properties:
                  clientIdKey:
                    description: ClientIdKey specifies the data key to access the
                      client secret.
                    type: string
                  clientSecretKey:
                    description: ClientSecretKey specifies the data key to access
                      the client secret.
                    type: string
                  secretRef:
                    description: SecretRef specifies the name of the kubernetes secret.
                    type: string
                required:
                - clientIdKey
                - clientSecretKey
                - secretRef
                type: object
              outputClaimToHeaders:
                description: "OutputClaimsToHeaders specifies a list of operations
                  to copy the claim to HTTP headers on a successfully verified token.\nThe
                  header specified in each operation in the list must be unique. Nested
                  claims of type string/int/bool is supported as well.\n```\n\n\n\toutputClaimToHeaders:\n\t-
                  header: x-my-company-jwt-group\n\t  claim: my-group\n\t- header:
                  x-test-environment-flag\n\t  claim: test-flag\n\t- header: x-jwt-claim-group\n\t
                  \ claim: nested.key.group\n\n\n```"
                items:
                  description: |-
                    ClaimToHeader specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
                    The header specified in each operation in the list must be unique. Nested claims of type string/int/bool is supported as well.
                  properties:
                    claim:
                      description: Claim specifies the name of the claim in the JWT
                        token that will be copied to the header.
                      maxLength: 128
                      pattern: ^[a-zA-Z0-9-._]+$
                      type: string
                    header:
                      description: Header specifies the name of the HTTP header to
                        which the claim value will be copied.
                      maxLength: 64
                      pattern: ^[a-zA-Z0-9-]+$
                      type: string
                  required:
                  - claim
                  - header
                  type: object
                type: array
              selector:
                description: The Selector specifies which workload the defined auth
                  policy should be applied to.
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      One or more labels that indicate a specific set of pods/VMs
                      on which a policy should be applied. The scope of label search is restricted to
                      the configuration namespace in which the resource is present.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
              wellKnownUri:
                description: WellKnownUri specifies the URi to the identity provider's
                  discovery document (also known as well-known endpoint).
                type: string
            required:
            - enabled
            - selector
            - wellKnownUri
            type: object
          status:
            description: AuthPolicyStatus defines the observed state of AuthPolicy
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                type: string
              observedGeneration:
                format: int64
                type: integer
              phase:
                type: string
              ready:
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
