name: Build and Deploy ztoperator

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - .flox/**
      - .run/**
      - .security/**
      - scripts/**
      - test/**
      - .dockerignore
      - .gitignore
      - .golangci.yml
      - .goreleaser.yaml
      - CONTRIBUTING.md
      - Dockerfile.goreleaser
      - LICENSE
      - README.md
      - catalog.info
      - ztoperator_logo.png
  pull_request:
    branches: [main]
    paths-ignore:
      - .flox/**
      - .run/**
      - .security/**
      - scripts/**
      - test/**
      - .dockerignore
      - .gitignore
      - .golangci.yml
      - .goreleaser.yaml
      - CONTRIBUTING.md
      - Dockerfile.goreleaser
      - LICENSE
      - README.md
      - catalog.info
      - ztoperator_logo.png

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build container image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Use sha for tags tags
            type=sha,format=long
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-docker
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          push: ${{ !github.event.pull_request.draft }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Notice of image digest
        run: echo "${{ steps.build-docker.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
    outputs:
      image_digest: ${{ steps.build-docker.outputs.digest }}

  pharos-scan:
    if: (!github.event.pull_request.draft)
    name: Run Pharos Security Scan
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      actions: read
      security-events: write
    steps:
      - name: Run Pharos
        uses: kartverket/pharos@v0.4.1
        with:
          image_url: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{needs.build.outputs.image_digest}}"
          tfsec: false

  deploy-argo:
    if: ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: octo-sts/action@6177b4481c00308b3839969c3eca88c96a91775f
        id: octo-sts
        with:
          scope: kartverket/tilgangsstyring-apps
          identity: ztoperator

      - name: Checkout apps repo
        uses: actions/checkout@v4
        with:
          repository: kartverket/tilgangsstyring-apps
          token: ${{ steps.octo-sts.outputs.token }}

      - name: Patch Image Digest
        run: |
          echo "\"${{ needs.build.outputs.image_digest }}\"" > "env/atgcp1-sandbox/ztoperator-system/digest"
          echo "\"${{ needs.build.outputs.image_digest }}\"" > "env/atkv3-sandbox/ztoperator-system/digest"

      - name: Commit Changes to Repo
        run: |
          git config --global user.email "noreply@kartverket.no"
          git config --global user.name "Ztoperator Deploy Action"
          git commit -aF- <<EOF
          ztoperator ${{ github.ref_name }}[${{ github.event.after }}]: ${{ github.event.head_commit.message }}
          EOF

          git push
