name: goreleaser

on:
  push:
    tags:
      - "*"

permissions:
  contents: write
  packages: write
  id-token: write

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  RBAC_FILE_PATH: config/rbac/role.yaml
  CRD_AUTHPOLICY_FILE_PATH: config/crd/bases/ztoperator.kartverket.no_authpolicies.yaml
  ARTIFACT_NAME: ztoperator-artifact-${{ github.sha }}-${{ github.run_id }}-${{ github.run_attempt }}

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_EXPERIMENTAL: 1
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.8'

      - name: Log into GHCR registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v4.0.0

      - name: Install Syft for SBOM Generation
        shell: bash
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Release with Goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  generate:
    name: CRD and ClusterRole
    needs: [ goreleaser ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Golang environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.8'

      - name: Generate CRD and ClusterRole
        run: make manifests

      - name: Upload CRD and ClusterRole
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.RBAC_FILE_PATH }}
            ${{ env.CRD_AUTHPOLICY_FILE_PATH }}