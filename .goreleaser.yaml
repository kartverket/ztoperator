# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.Version={{.Version}} -X main.Commit={{.ShortCommit}}
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: darwin
        goarch: i386
    tags:
      - osusergo
      - netgo
    main: ./cmd/

archives:
  - ids:
      - ztoperator
    files:
      - README.md
      - LICENSE
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

dockers:
  - image_templates:
      - "ghcr.io/kartverket/ztoperator:{{ .Tag }}-linux-amd64"
    use: buildx
    dockerfile: Dockerfile.goreleaser
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
    goos: linux
    goarch: amd64
  - image_templates:
      - "ghcr.io/kartverket/ztoperator:{{ .Tag }}-linux-arm64"
    use: buildx
    dockerfile: Dockerfile.goreleaser
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
    goos: linux
    goarch: arm64

docker_manifests:
  - name_template: "ghcr.io/kartverket/ztoperator:{{ .Tag }}"
    image_templates:
      - "ghcr.io/kartverket/ztoperator:{{ .Tag }}-linux-arm64"
      - "ghcr.io/kartverket/ztoperator:{{ .Tag }}-linux-amd64"

docker_signs:
  - artifacts: all
    cmd: cosign
    args:
      - "sign"
      - "--oidc-issuer=https://token.actions.githubusercontent.com"
      - "${artifact}"
      - "--yes"

signs:
  - artifacts: all
    cmd: cosign
    signature: "${artifact}.sig"
    args:
      - "sign-blob"
      - "--oidc-issuer=https://token.actions.githubusercontent.com"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"

sboms:
  - artifacts: archive

checksum:
  name_template: "checksums.txt"
snapshot:
  version_template: "{{ .Tag }}-dev"
changelog:
  sort: asc
